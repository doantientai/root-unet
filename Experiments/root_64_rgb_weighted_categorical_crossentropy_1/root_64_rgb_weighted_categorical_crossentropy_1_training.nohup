Using Theano backend.
WARNING (theano.sandbox.cuda): The cuda backend is deprecated and will be removed in the next release (v0.10).  Please switch to the gpuarray backend. You can get more information about how to switch at this URL:
 https://github.com/Theano/Theano/wiki/Converting-to-the-new-gpu-back-end%28gpuarray%29

Using gpu device 0: GeForce GTX 1080 (CNMeM is disabled, cuDNN 5110)
('train_imgs: ', (12, 3, 1661, 2325))
imgs_std:
32.7681903164
imgs_mean:
47.403771015
imgs:
(12, 3, 1661, 2325)
Passed!
('imgs.shape: ', (12, 3, 1661, 2325))
('imgs_equalized.shape: ', (12, 3, 1661, 2325))

train images/masks shape:
(12, 3, 1329, 2325)
train images range (min-max): 0.0 - 1.0
train masks are within 0-1

patches per full image: 1000

train PATCHES images/masks shape:
(12000, 3, 64, 64)
train PATCHES images range (min-max): 0.0 - 1.0
./src/retinaNN_training.py:129: UserWarning: Update your `Model` call to the Keras 2 API: `Model(outputs=Elemwise{t..., inputs=/input_1)`
  model = Model(input=inputs, output=conv7)
Check: final output of the network:
(None, 4096, 2)
./src/retinaNN_training.py:265: UserWarning: The `nb_epoch` argument in `fit` has been renamed `epochs`.
  model.fit(patches_imgs_train, patches_masks_train, nb_epoch=N_epochs, batch_size=batch_size, verbose=2, shuffle=True, validation_split=0.1, callbacks=[checkpointer])
Train on 10800 samples, validate on 1200 samples
Epoch 1/100
Traceback (most recent call last):
  File "./src/retinaNN_training.py", line 265, in <module>
    model.fit(patches_imgs_train, patches_masks_train, nb_epoch=N_epochs, batch_size=batch_size, verbose=2, shuffle=True, validation_split=0.1, callbacks=[checkpointer])
  File "/home/doantientai/anaconda3/envs/keras1.1/lib/python2.7/site-packages/keras/engine/training.py", line 1598, in fit
    validation_steps=validation_steps)
  File "/home/doantientai/anaconda3/envs/keras1.1/lib/python2.7/site-packages/keras/engine/training.py", line 1183, in _fit_loop
    outs = f(ins_batch)
  File "/home/doantientai/anaconda3/envs/keras1.1/lib/python2.7/site-packages/keras/backend/theano_backend.py", line 1222, in __call__
    return self.function(*inputs)
  File "/home/doantientai/anaconda3/envs/keras1.1/lib/python2.7/site-packages/theano/compile/function_module.py", line 898, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "/home/doantientai/anaconda3/envs/keras1.1/lib/python2.7/site-packages/theano/gof/link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "/home/doantientai/anaconda3/envs/keras1.1/lib/python2.7/site-packages/theano/compile/function_module.py", line 884, in __call__
    self.fn() if output_subset is None else\
ValueError: GpuElemwise. Input dimension mis-match. Input 2 (indices start at 0) has shape[2] == 1, but the output's size on that axis is 2.
Apply node that caused the error: GpuElemwise{Composite{((i0 * log(i1)) * i2)},no_inplace}(GpuFromHost.0, GpuElemwise{clip,no_inplace}.0, GpuDimShuffle{x,x,0}.0)
Toposort index: 514
Inputs types: [CudaNdarrayType(float32, 3D), CudaNdarrayType(float32, 3D), CudaNdarrayType(float32, (True, True, False))]
Inputs shapes: [(128, 4096, 2), (128, 4096, 2), (1, 1, 1)]
Inputs strides: [(8192, 2, 1), (8192, 2, 1), (0, 0, 0)]
Inputs values: ['not shown', 'not shown', CudaNdarray([[[ 1.]]])]
Outputs clients: [[GpuCAReduce{add}{0,0,1}(GpuElemwise{Composite{((i0 * log(i1)) * i2)},no_inplace}.0)]]

HINT: Re-running with most Theano optimization disabled could give you a back-trace of when this node was created. This can be done with by setting the Theano flag 'optimizer=fast_compile'. If that does not work, Theano optimizations can be disabled with 'optimizer=None'.
HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
